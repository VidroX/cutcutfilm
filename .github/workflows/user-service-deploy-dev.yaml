name: Build and deploy User Service to Kubernetes cluster (DEV)

on:
  push:
    branches: ["dev"]
    paths:
      - "services/user/**"
      - ".github/workflows/user-service-deploy-dev.yaml"
  workflow_dispatch:

env:
  WORKING_DIRECTORY: "./services/user"
  IMAGE_NAME: "ghcr.io/vidrox/cutcutfilm:dev"
  RELEASE_NAME: "cutcutfilm-user-dev"
  NAMESPACE: "cutcutfilm-dev"

jobs:
  compile-schema:
    name: Compile Schema
    runs-on: ubuntu-latest
    environment: development
    steps:
      - uses: actions/checkout@v3

      - name: Compile schema
        env:
          USER_SERVICE_LOCATION: ${{ vars.USER_SERVICE_LOCATION  }}
        run: |
          chmod +x ./compile-schema.sh
          ./compile-schema.sh

  build:
    name: Build
    needs: compile-schema
    runs-on: ubuntu-latest
    environment: development
    defaults:
      run:
        working-directory: ${{ env.WORKING_DIRECTORY }}
    permissions:
      contents: read
      id-token: write
      packages: write
    steps:
      - uses: actions/checkout@v3
    
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GIT_REGISTRY_TOKEN }}

      - name: Build and push the Docker image
        uses: docker/build-push-action@v4
        env:
          GIT_USER: ${{ secrets.GIT_USER }}
          GIT_TOKEN: ${{ secrets.GIT_TOKEN }}
        with:
          push: true
          context: ${{ env.WORKING_DIRECTORY }}
          platforms: linux/amd64
          cache-from: type=gha
          cache-to: type=gha,mode=max
          tags: |
            ${{ env.IMAGE_NAME }}-latest
            ${{ env.IMAGE_NAME }}-${{ github.sha }}

  deploy:
    name: Deploy
    needs: [ compile-schema, build ]
    runs-on: ubuntu-latest
    environment: development
    permissions:
      id-token: write
      contents: read
      actions: read
    steps:
      - name: Deploy to cluster
        uses: 'vimeda/helm@v1'
        with:
          helm: 'helm3'
          release: ${{ env.RELEASE_NAME }}
          namespace: ${{ env.NAMESPACE }}
          chart: './helm/cutcutfilm-user'
          token: '${{ github.token }}'
          value-files: >-
            [ 
              "values-dev.yaml"
            ]
        env:
          KUBECONFIG_FILE: '${{ secrets.KUBECONFIG }}'