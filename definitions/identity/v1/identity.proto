syntax = "proto3";

package identity.v1;

service IdentityService {
  rpc IssueTokens (IssueTokensRequest) returns (IssueTokensResponse) {}
  rpc IssueServiceToken (IssueServiceTokenRequest) returns (IssueServiceTokenResponse) {}
  rpc RefreshToken (RefreshTokenRequest) returns (RefreshTokenResponse) {}
  rpc SetUserPermissions (SetUserPermissionsRequest) returns (SetUserPermissionsResponse) {}
  rpc GetUserPermissions (GetUserPermissionsRequest) returns (GetUserPermissionsResponse) {}
  rpc ValidateUser (ValidateUserRequest) returns (ValidateUserResponse) {}
  rpc GetKeySet (GetKeySetRequest) returns (GetKeySetResponse) {}
  rpc RevokeToken (RevokeTokenRequest) returns (RevokeTokenResponse) {}
  rpc IsTokenRevoked (IsTokenRevokedRequest) returns (IsTokenRevokedResponse) {}
}

message IssueTokensRequest {
  string user_id = 1;
}

message IssueTokensResponse {
  string access_token = 1;
  string refresh_token = 2;
}

message IssueServiceTokenRequest {}

message IssueServiceTokenResponse {
  string token = 1;
}

message RefreshTokenRequest {}

message RefreshTokenResponse {
  string token = 1;
}

message Permission {
  string action = 1;
  string description = 2;
}

message GetUserPermissionsResponse {
  string user_id = 1;
  repeated Permission permissions = 2;
}

message SetUserPermissionsRequest {
  string user_id = 1;
  repeated string permissions = 2;
}

message UserWithPermissions {
  string user_id = 1;
  repeated Permission permissions = 2;
}

message SetUserPermissionsResponse {
  string token = 1;
  UserWithPermissions user = 2;
}

message GetUserPermissionsRequest {
  string user_id = 1;
}

message ValidateUserRequest {}

message ValidateUserResponse {
  string user_id = 1;
  string token_type = 2;
  repeated Permission permissions = 3;
}

message GetKeySetRequest {}

message GetKeySetResponse {
  string encoded_keys = 1;
}

message RevokeTokenRequest {
  string user_id = 1;
  string token = 2;
}

message RevokeTokenResponse {
  bool is_successful = 1;
}

message IsTokenRevokedRequest {
  string token = 1;
}

message IsTokenRevokedResponse {
  bool is_revoked = 1;
}