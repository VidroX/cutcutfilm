// @generated by protoc-gen-connect-es v1.1.3 with parameter "target=ts"
// @generated from file identity/v1/identity.proto (package identity.v1, syntax proto3)
/* eslint-disable */
// @ts-nocheck

import { GetKeySetRequest, GetKeySetResponse, GetUserPermissionsRequest, GetUserPermissionsResponse, IssueServiceTokenRequest, IssueServiceTokenResponse, IssueTokensRequest, IssueTokensResponse, RefreshTokenRequest, RefreshTokenResponse, SetUserPermissionsRequest, SetUserPermissionsResponse, ValidateUserRequest, ValidateUserResponse } from "./identity_pb.js";
import { MethodKind } from "@bufbuild/protobuf";

/**
 * @generated from service identity.v1.IdentityService
 */
export const IdentityService = {
  typeName: "identity.v1.IdentityService",
  methods: {
    /**
     * @generated from rpc identity.v1.IdentityService.IssueTokens
     */
    issueTokens: {
      name: "IssueTokens",
      I: IssueTokensRequest,
      O: IssueTokensResponse,
      kind: MethodKind.Unary,
    },
    /**
     * @generated from rpc identity.v1.IdentityService.IssueServiceToken
     */
    issueServiceToken: {
      name: "IssueServiceToken",
      I: IssueServiceTokenRequest,
      O: IssueServiceTokenResponse,
      kind: MethodKind.Unary,
    },
    /**
     * @generated from rpc identity.v1.IdentityService.RefreshToken
     */
    refreshToken: {
      name: "RefreshToken",
      I: RefreshTokenRequest,
      O: RefreshTokenResponse,
      kind: MethodKind.Unary,
    },
    /**
     * @generated from rpc identity.v1.IdentityService.SetUserPermissions
     */
    setUserPermissions: {
      name: "SetUserPermissions",
      I: SetUserPermissionsRequest,
      O: SetUserPermissionsResponse,
      kind: MethodKind.Unary,
    },
    /**
     * @generated from rpc identity.v1.IdentityService.GetUserPermissions
     */
    getUserPermissions: {
      name: "GetUserPermissions",
      I: GetUserPermissionsRequest,
      O: GetUserPermissionsResponse,
      kind: MethodKind.Unary,
    },
    /**
     * @generated from rpc identity.v1.IdentityService.ValidateUser
     */
    validateUser: {
      name: "ValidateUser",
      I: ValidateUserRequest,
      O: ValidateUserResponse,
      kind: MethodKind.Unary,
    },
    /**
     * @generated from rpc identity.v1.IdentityService.GetKeySet
     */
    getKeySet: {
      name: "GetKeySet",
      I: GetKeySetRequest,
      O: GetKeySetResponse,
      kind: MethodKind.Unary,
    },
  }
} as const;

